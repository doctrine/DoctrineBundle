<?xml version="1.0"?>
<psalm
    errorLevel="4"
    phpVersion="8.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://getpsalm.org/schema/config"
    findUnusedBaselineEntry="true"
    findUnusedCode="false"
    xsi:schemaLocation="https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd"
>
    <plugins>
        <pluginClass class="Psalm\SymfonyPsalmPlugin\Plugin"/>
        <pluginClass class="Psalm\PhpUnitPlugin\Plugin"/>
    </plugins>
    <projectFiles>
        <ignoreFiles>
            <directory name="vendor"/>
            <!-- Deprecated classes, not worth fixing -->
            <file name="Command/ImportMappingDoctrineCommand.php"/>
            <file name="Command/Proxy/OrmProxyCommand.php"/>
            <file name="DependencyInjection/Compiler/WellKnownSchemaFilterPass.php"/>
        </ignoreFiles>
        <directory name="CacheWarmer"/>
        <directory name="Command"/>
        <directory name="Controller"/>
        <directory name="DataCollector"/>
        <directory name="Dbal"/>
        <directory name="DependencyInjection"/>
        <directory name="EventSubscriber"/>
        <directory name="Mapping"/>
        <directory name="Repository"/>
        <directory name="Tests"/>
        <directory name="Twig"/>
        <file name="ConnectionFactory.php"/>
        <file name="DoctrineBundle.php"/>
        <file name="ManagerConfigurator.php"/>
        <file name="Registry.php"/>
    </projectFiles>
    <issueHandlers>
        <RedundantPropertyInitializationCheck>
            <errorLevel type="suppress">
                <!-- Properties can be uninitialized in tests if setUp() fails. -->
                <directory name="Tests"/>
            </errorLevel>
        </RedundantPropertyInitializationCheck>
        <UndefinedClass>
            <errorLevel type="suppress">
                <!-- We use the "Foo" namespace in unit tests. We are aware that those classes don't exist. -->
                <referencedClass name="Foo\*"/>
            </errorLevel>
        </UndefinedClass>
        <DuplicateClass>
            <errorLevel type="suppress">
                <!-- Conditional class definition-->
                <file name="Repository/RepositoryFactoryCompatibility.php"/>
                <file name="Repository/ServiceEntityRepository.php"/>
            </errorLevel>
        </DuplicateClass>
        <UndefinedMethod>
            <errorLevel type="suppress">
                <!-- Too tricky to configure very nested configuration in a way Psalm understands -->
                <file name="DependencyInjection/Configuration.php" />
            </errorLevel>
        </UndefinedMethod>
    </issueHandlers>
</psalm>
