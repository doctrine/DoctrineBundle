
name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
  push:
    branches:
      - "*.x"

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"
    env:
      SYMFONY_REQUIRE: ${{matrix.symfony-require}}
      SYMFONY_DEPRECATIONS_HELPER: weak

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
        dependencies:
          - "highest"
        stability:
          - "stable"
        symfony-require:
          - ""
        include:
          # Tests the lowest set of dependencies
          - dependencies: "lowest"
            stability: "stable"
            php-version: "7.4"

          # Test LTS
          - symfony-require: "5.4.*"
            dependencies: "highest"
            php-version: "8.0"

          # Test last supported minor version
          - symfony-require: "6.*"
            dependencies: "highest"
            php-version: "8.1"

          # Bleeding edge
          - php-version: "8.1"
            dependencies: "highest"
            stability: "dev"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 2

      - name: "Install PHP with PCOV"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"
          extensions: "pdo_sqlite"

      - name: "Globally install symfony/flex"
        run: "composer require --no-progress --no-scripts --no-plugins symfony/flex"

      - name: "Require symfony/messenger"
        run: "composer require --dev symfony/messenger --no-update"
        if: "${{ startsWith(matrix.symfony-require, '5.') }}"

      - name: "Enforce using stable dependencies"
        run: "composer config minimum-stability stable"
        if: "${{ matrix.stability == 'stable' }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v3"
        with:
          name: "phpunit-${{ matrix.php-version }}-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-20.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v3"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v3"
        with:
          directory: reports
